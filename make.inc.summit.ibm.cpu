#==============================================================================
# Exciting-Plus make.inc file for Summit (OLCF) with IBM XL compilers
# Last edited: May 6, 2020 (WYP)
#==============================================================================

MAKE := make
COMPILER := ibm

# Compiler switch to turn on the preprocessor
CPP_OPTS := -qpreprocess

# Add your custom preprocessor defines here
#CPP_OPTS +=

# Add your common compile time options here
F90_OPTS := -qsuppress=1501-510      # Remove "compilation successful messages"

#==============================================================================
# MPI
#==============================================================================

F90 := mpifort
CC  := mpicc
CXX := mpic++
MPI_CPP_OPTS := -WF,-qfpp,-D_MPI_
CPP_OPTS += $(MPI_CPP_OPTS)

#==============================================================================
# OpenMP
#==============================================================================

# These are passed at compile time and link time
# Don't forget to `export OMP_STACKSIZE=2G` at runtime
OMP_OPTS := -qsmp=omp:auto

#==============================================================================
# Serial compiler (for utilities)
#==============================================================================

F90SERIAL := xlf90_r
F90_OPTS_SERIAL = $(filter-out $(OMP_OPTS),$(filter-out $(MPI_CPP_OPTS),$(F90_OPTS)))

#==============================================================================
# Compiler and linker options
#==============================================================================

# Debugging
#F90_OPTS += -g $(CPP_OPTS) $(OMP_OPTS)
#F90_LINK_OPTS = $(F90_OPTS)
#EXE_SFX := dbg

# Debugging with extra checks
# (Don't forget to enable core dump generation using `ulimit -c unlimited`)
#F90_OPTS += -g -O0 -qsource -qcheck -qsigtrap -qstackprotect=all -qlinedebug -qfullpath -qtbtable=full $(CPP_OPTS) $(OMP_OPTS) -qflag=w:w
#F90_LINK_OPTS = $(F90_OPTS)
#EXE_SFX := dbgchk

# Optimization level 2 plus automatic ESSL, automatic OpenMP, loop unrolling,
# interprocedural analyzer
# Make sure to enable ESSL (see BLAS and LAPACK section)
F90_OPTS += -g2 -O2 -qipa -qarch=pwr9 -qtune=pwr9:smt4 -qunroll -qessl $(CPP_OPTS) $(OMP_OPTS)
F90_LINK_OPTS = $(F90_OPTS) -qpic
EXE_SFX := opt

# Profiling
#F90_OPTS += -pg -g2 -O2 -qipa -qarch=pwr9 -qtune=pwr9:smt4 -qunroll -qessl $(CPP_OPTS) $(OMP_OPTS)
# Make sure to enable ESSL (see BLAS and LAPACK section)
#F90_LINK_OPTS = $(F90_OPTS) -qpic
#EXE_SFX := prof

# Fully optimized build
# Note: With XL 16.1.1-3, '-Ofast' gives weird results
#   (30 extra electrons in the ground state for La2CuO4)
# TODO: investigate whether newer versions still has this bug
# Make sure to enable ESSL (see BLAS and LAPACK section)
#F90_OPTS += -g2 -Ofast -qipa -qarch=pwr9 -qtune=pwr9:smt4 -qunroll -qessl $(CPP_OPTS) $(OMP_OPTS)
#F90_LINK_OPTS = $(F90_OPTS) -qpic
#EXE_SFX := fast

# Profiling, fully optimized
# Note: DO NOT USE, see above
#F90_OPTS += -pg -g2 -Ofast -qipa -qarch=pwr9 -qtune=pwr9:smt4 -qunroll -qessl $(CPP_OPTS) $(OMP_OPTS)
#F90_LINK_OPTS = $(F90_OPTS) -qpic
#EXE_SFX := fastprof

#==============================================================================
# BLAS and LAPACK
#==============================================================================

# Use IBM ESSL
# Make sure to `module load essl`
ESSL_PATH = ${OLCF_ESSL_ROOT}/lib64
LAPACK_LIB = -L$(ESSL_PATH) -lessl

#==============================================================================
# HDF5
#==============================================================================

# To disable, comment these three lines
# Make sure to `module load hdf5`
HDF5_INC = -I${OLCF_HDF5_ROOT}/include
HDF5_LIB = -L${OLCF_HDF5_ROOT}/lib -lhdf5_fortran -lhdf5_cpp -lhdf5_hl -lhdf5 -ldl
HDF5_CPP_OPTS := -WF,-qfpp,-D_HDF5_

CPP_OPTS += $(HDF5_CPP_OPTS)
F90_OPTS += $(HDF5_INC)

#==============================================================================
# Other libraries (retained here for historical purposes)
#==============================================================================

# ==- compile with libXC support ===
#CPP_OPTS := $(CPP_OPTS) -D_LIBXC_
#XC_LIB =

# ==- compile with NFFT support ===
#CPP_OPTS := $(CPP_OPTS) -D_NFFT_
#NFFT_INC = -I$(HOME)/local/include
#NFFT_LIB = $(HOME)/local/lib/libnfft3.a $(HOME)/local/lib/libfftw3.a

# === compile with Madness API ===
#CPP_OPTS := $(CPP_OPTS) -D_MAD_
#MADNESS_INC = -I$(HOME)/local/include
#MADNESS_LIB = -L$(HOME)/local/lib/ -lMADmra -lMADlinalg -lMADtensor -lMADmisc -lMADmuparser -lMADtinyxml -lMADworld -lmpichcxx -lstdc++

#==============================================================================
# List all libraries to link
#==============================================================================

LIBS := $(LAPACK_LIB) $(HDF5_LIB)
